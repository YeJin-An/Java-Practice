배열이란?
-> "배열은 같은 타입의 여러 변수를
     하나의 묶음으로 다루는 것"

Ex> int score1, score2, score3, score4, score5;
저장공간에 이름을 넣어주는 것이 변수지정!!



허나 배열의 지정은 ???
-> int [] score = new int[5];

// 저장공간에 배열이름이 없다???
--> 변수 안의 저장공간이 5개 생긴 것이다!!

인덱스 -> 자동으로 생긴 번호

// 배열( 연속적 )을 다루기 위해서 참조변수 필요
참조변수 -> 참조변수를 통해 저장공간을 다룬다!!.



배열의 선언과 생성
-> 배열의 선언 - 배열을 다루기 위한 참조변수의 선언

==> 선언방법 <==
1. 타입[ ] 변수이름;
->     int[ ]  score;
-> String[ ]  name;     // java 스타일

2. 타입   변수이름[ ];
-> int        scosre[ ];
-> String    name [ ];   // C언어 스타일


타입[ ]  변수이름;    // 배열을 선언
                             (배열을 다루기 위한 참조변수 선언)

변수이름 = new 타입[길이];
                          // 배열을 생성(실제 저장공간을 생성)


Ex>  int[ ]  score;           // 배열을 다루기 위한 score
       score = new int[5];  // int타입의 저장할 공간 5개생성


배열의 인덱스
-> 배열의 인덱스 
    - 각 요소(저장공간)에 자동으로 붙는 (일련)번호
-> 인덱스의 범위는 0부터 '배열길이-1' 까지.

중요합니다!!
-> 배열의 인덱스(index)  -  배열의 번호 
-> 배열의 요소(element)  - 저장공간 하나를 의미한다.

1. int[] score = new int[5];
2. score[3] = 100;
3. int value = score[3];


배열의 길이
-> 배열이름.length - 배열의 길이(int형 상수)
int [ ] arr = new int[5];
int   tmp = arr.length;

중요한 특징!!!
// 배열은 한번 생성하면, 
   {실행하는 동안}  그 길이를 바꿀 수 없다.

Q: 왜 안되요?
Q: 부족할 수 있지 않을 까요??

배열이름.length를 왜 쓰나요??
-> length를 쓰는 이유는 
    배열을 선언및 생성의 저장공간의 갯수와
    프로그램을 돌아가는 횟수가 
    서로 다를 수 있어 안전하게 .length를 사용한다.


{ 배열의 초기화 }
-> 배열의 각 요소에 처음으로 값을 저장하는 것..
-> 배열은 기본적으로 자동 초기화된다 
    - 0으로 된다. 왜?? 안그럼 말이 안되!!!!
-> 배열의 값을 지정한 다는 것을 배열의 초기화라고 한다.

배열의 초기화 하는 방법
1. int[ ]  score = new int[ ] { 50, 60, 70, 80, 90 };
2. int[ ]  score = { 50, 60, 70, 80, 90 };



배열의 출력
-> int[ ] iArr = {100,95, 80, 70, 60};
    System.out.println(iArr); 이거 안된
// 단 char chArr 캐릭터 배열은 됨.

출력을 하는 방법
-> for(int i=0; i<iArr.length; i++){
        System.out.println(iArr[i]);
    }
-> System.out.println(Arrays.toString(iArr));


배열의 활용(1, 2, 3, 4)
->



String배열의 선언과 생성

-> String[] name = new String[3];
// String는 참조형이다.
    따라서 타입의 기본값은 null이다

   자료형                    기본값
boolean                       false 
char                         '\u0000'
byte, short, int                 0
long                             0L
float                            0.0f
double                    0.0d OR 0.0
참조형                         null



커맨드 라인을 통해 입력받기
-> 커맨드 라인에 입력한 값이 문자열 배열에
    담겨서 전달된다.





























































